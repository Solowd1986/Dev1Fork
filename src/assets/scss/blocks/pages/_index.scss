

/*  Идея в следующем:
    1. От body мы получаем flex и направление column, теперь все div первой вложенности идут друг под другом.
    2. Любому из них, например, контентному, даем класс container и content-offset.
    3. И этот блок container тоже flex и он тянется вниз из-за grow. Но его элемент, с тегом main и классом content - нет
    4. Теперь тянем вниз и вложенный элемент, ему тоже задаем flex+column+grow.
    5. Все элементы тянутся вниз так, главное - поддержка вложенности, используя класс element-flex-grow
================================
*/
.flex-grow-bottom {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
}
/*================================*/



.content {
  background-color: lightpink;
  margin: auto;
  text-align: center;
  //background-image: url("../../../img/68778702_327427475.jpg");
}




/*  TEST
================================
*/


.data-list {
  position: relative;
  padding-bottom: 65px;
  text-align: center;

  & > button {
    display: flex;
    position: absolute;
    color: white;
    bottom: 15px;
    align-items: center;
    background-color: red;
    right: 0; left: 0; margin: 0 auto;
    padding: 8px 25px;
    border-radius: 5px;
    transition: 0.5s linear;

    &:focus {
      outline: none;
    }
  }
}



.btn-more.active > .loader {
  animation: lds-dual-ring .8s linear infinite;
}

.loader {
  width: 30px;
  height: 30px;
  position: relative;
  left: -10px;
}


.loader:after {
  content: " ";
  display: block;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border-color: #fff;
  border-color: #fff rgba(0,0,0,0);
  border-style: solid;
  border-width: 5px;
}

@keyframes lds-dual-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}



.btn-overlay {
  position: fixed;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
}


.reload {
  position: absolute;
  align-self: center;
  left: 15px;
}

.btn-products {
  border-radius: 50px;
  display: flex;
  position: relative;
  background-color: $white;
  font-size: 15px;
  max-width: 255px;
  max-height: 58px;
  padding: 15px 10px 15px 50px;
  font-weight: 400;
  line-height: 21px;
  color: #c51abb;
  border: 2px solid #c51abb;

  &:hover > .reload {
    animation: rotate-ring .8s linear infinite;

  }


  &:focus {
    outline: none;
  }
}

@keyframes rotate-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}







.back-g {
  height: 200px;
  background-image: url("../img/68778702_327427475.jpg");
}

.ssb {
  &:focus {
    outline: 1px solid red;
    background-color: lightpink;
  }
}

/* общие стили для таблицы, изменять их не нужно */

th {
  text-align: center;
  font-weight: bold;
}



td {
  width: 150px;
  white-space: nowrap;
  text-align: center;
  vertical-align: middle;
  padding: 10px;
}

.nw {
  background-color: #999;
}

.n {
  background-color: #03f;
  color: #fff;
}

.ne {
  background-color: #ff6;
}

.w {
  background-color: #ff0;
}

.c {
  background-color: #60c;
  color: #fff;
}

.e {
  background-color: #09f;
  color: #fff;
}

.sw {
  background-color: #963;
  color: #fff;
}

.s {
  background-color: #f60;
  color: #fff;
}

.se {
  background-color: #0c3;
  color: #fff;
}


/*  Блок корзины товаров, тестовый
================================
*/

.font-test {
  font-family: "Railway1", "Times New Roman", sans-serif;
}


.list-goods {
  margin-top: 20px;
  margin-bottom: 20px;
}

.goods-item {
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: 300px;
  margin: 0 auto 10px;
}

.goods-desc {
  font-size: 20px;
  font-weight: 300;
  margin-right: 20px;
}

.wrapper-order {
  display: flex;
  align-items: center;
  margin-left: auto;
}

.goods-quantity {
  margin-right: 10px;
  padding: 5px 10px;
  width: 40px;
}

.btn-order-cart {
  background-color: red;
  border-radius: 10px;
  padding: 5px 10px;
  color: white;
  font-size: 16px;
  font-weight: 300;

  &:not(:last-child) {
    margin-right: 10px;
  }
  &:hover {
    background-color: mediumvioletred;
  }

}





/*================================*/

.page-link {
  display: block;
  padding: 10px;
  background-color: darkseagreen;
  max-width: 180px;
  margin: 0 auto 20px;
  font-weight: bold;
  color: black;
  border-radius: 10px;
}



/*================================*/


/*  БЛОК КАРТОЧЕК ТОВАРОВ
    Данный блок вмещает в себя некие перечисляемые единицы, в нем сразу указан миксин для вытягивания содержимого блока на
    15px через margin, чтобы скомпенсировать отступы вложенных элементов.
================================
*/

.items-list {
  display: flex;
  flex-wrap: wrap;
  @include wrapper-negative-margins()
}

.items-list-bg {
  background-color: initial;
}

/*  Отдельный элемент этого блока
    Генерируем размер каждого элемента исходя из общих 12 колонок. Начинамем с 12/3 = 4 в ряд, потом 3, 2 и 1 колонка.
    Также элементы сразу получаеют margin слева и справа (их и компенсируют отрицательные margin для родительского блока) и
    нижний margin, чтобы ряды не соприкасались по нижней границе.
================================
*/

.item {
  display: flex;
  flex-direction: column;
  transition: .3s linear;
  @include generate-columns-for-item(3);

  @media (max-width: 780px) {
    @include generate-columns-for-item(4);
  }

  @media (max-width: 600px) {
    @include generate-columns-for-item(6);

  }

  @media (max-width: 480px) {
    @include generate-columns-for-item(12);
  }
}

